version: "3.9"
services:

  database: #Baza danych dla aplikacji
    container_name: Uniquanda_DB
    build:
      dockerfile: ./database/Dockerfile
      context: ./
    restart: always
    environment:
      POSTGRES_PASSWORD: uniquanda
      POSTGRES_USER: uniquanda
    ports:
      - "9001:5432"
    volumes:
      - database-volume:/var/lib/postgresql
    networks: 
      - uniquanda_network


  pgadmin: # PG Admin dla baz danych aplikacji
    image: dpage/pgadmin4
    container_name: Uniquanda_Pgadmin
    restart: always
    depends_on:
      - database
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@uniquanda.pl
      PGADMIN_DEFAULT_PASSWORD: uniquanda
    ports:
      - "12001:80"
    networks: 
      - uniquanda_network

  authorization_database: #Autoryzacyjna baza danych
    container_name: Uniquanda_Authorization_Database
    build:
      dockerfile: ./database/Dockerfile
      context: ./
    restart: always
    environment:
      POSTGRES_PASSWORD: uniquanda
      POSTGRES_USER: uniquanda
    ports:
      - "10001:5432"
    volumes:
      - authorization-database-volume:/var/lib/postgresql
    networks: 
      - uniquanda_network

  backend1: #Serwer aplikacyjny nr 1.
    tty: true
    container_name: Uniquanda_APP1
    build:
      dockerfile: ./backend/Dockerfile
      context: ./
    ports:
      - "3001:80"
      - "3002:443"
    networks: 
      - uniquanda_network
    volumes:
      - ./../UniQuanda/:/app
      - /app/UniQuanda.Presentation.API/bin/
      - /app/UniQuanda.Presentation.API/debug/
      - /app/UniQuanda.Presentation.API/obj/
      - /app/UniQuanda.Core.Application/bin/
      - /app/UniQuanda.Core.Application/debug/
      - /app/UniQuanda.Core.Application/obj/
      - /app/UniQuanda.Core.Domain/bin/
      - /app/UniQuanda.Core.Domain/debug/
      - /app/UniQuanda.Core.Domain/obj/
      - /app/UniQuanda.Infrastructure/bin/
      - /app/UniQuanda.Infrastructure/debug/
      - /app/UniQuanda.Infrastructure/obj/
      - /app/UniQuanda.Infrastructure.Presistence/bin/
      - /app/UniQuanda.Infrastructure.Presistence/debug/
      - /app/UniQuanda.Infrastructure.Presistence/obj/
      - /app/UniQuanda.Tests/bin/
      - /app/UniQuanda.Tests/debug/
      - /app/UniQuanda.Tests/obj/
    depends_on:
      - authorization_database
      - database
      - redis
    environment:
      ASPNETCORE_HTTP_PORT: 80
      ASPNETCORE_HTTPS_PORT: 443
      ASPNETCORE_URLS: https://+:443;http://+:80
    hostname: uniquanda_backend1

  backend2: # Serwer aplikacyjny nr 2
    tty: true
    container_name: Uniquanda_APP2
    build:
      dockerfile: ./backend/Dockerfile
      context: ./
    ports:
      - "3011:80"
      - "3012:443"
    networks: 
      - uniquanda_network
    volumes:
      - ./../UniQuanda/:/app
      - /app/UniQuanda.Presentation.API/bin/
      - /app/UniQuanda.Presentation.API/debug/
      - /app/UniQuanda.Presentation.API/obj/
      - /app/UniQuanda.Core.Application/bin/
      - /app/UniQuanda.Core.Application/debug/
      - /app/UniQuanda.Core.Application/obj/
      - /app/UniQuanda.Core.Domain/bin/
      - /app/UniQuanda.Core.Domain/debug/
      - /app/UniQuanda.Core.Domain/obj/
      - /app/UniQuanda.Infrastructure/bin/
      - /app/UniQuanda.Infrastructure/debug/
      - /app/UniQuanda.Infrastructure/obj/
      - /app/UniQuanda.Infrastructure.Presistence/bin/
      - /app/UniQuanda.Infrastructure.Presistence/debug/
      - /app/UniQuanda.Infrastructure.Presistence/obj/
      - /app/UniQuanda.Tests/bin/
      - /app/UniQuanda.Tests/debug/
      - /app/UniQuanda.Tests/obj/
    depends_on:
      - authorization_database
      - database
      - redis
    environment:
      ASPNETCORE_HTTP_PORT: 80
      ASPNETCORE_HTTPS_PORT: 443
      ASPNETCORE_URLS: https://+:443;http://+:80
    hostname: uniquanda_backend2

  lb: #Load Balancer
    tty: true
    build:
      dockerfile: ./load_balancer/Dockerfile
      context: ./
    container_name: Uniquanda_LB
    ports:
      - "80:80"
      - "443:443"
    networks: 
      - uniquanda_network
    depends_on:
      - backend2
      - backend1

  redis: #redis
    tty: true
    image: redis:7.0-rc1-alpine
    container_name: Uniquanda_Redis
    command: redis-server --requirepass 5w4jMnfds7GH
    ports:
     - "6001:6379"
    networks:
      - uniquanda_network
    environment:
     - REDIS_REPLICATION_MODE=master
    

volumes:
  database-volume:
  authorization-database-volume:

networks:
  uniquanda_network:
    driver: bridge